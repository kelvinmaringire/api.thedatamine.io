pip freeze > requirements.txt

sudo passwd root

sudo apt update

sudo apt upgrade -y

sudo timedatectl set-timezone Africa/Johannesburg

sudo ufw enable

sudo ufw allow 80/tcp

sudo ufw allow 8000/tcp

sudo ufw allow 443/tcp

sudo ufw reload

sudo ufw status

sudo apt install nginx -y

sudo apt install build-essential libpq-dev python3-dev python3-venv cron -y

sudo apt install postgresql postgresql-contrib -y

sudo apt install -y postgresql-common

sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh

sudo -i -u postgres psql

ALTER USER postgres WITH PASSWORD 'talibk700';

CREATE DATABASE thedatam_db;

GRANT ALL PRIVILEGES ON DATABASE thedatam_db TO postgres;

ALTER USER postgres WITH SUPERUSER;

\q

cd /var/www

sudo git clone https://github.com/kelvinmaringire/api.thedatamine.io.git

cd api.thedatamine.io

sudo python3 -m venv myenv

source myenv/bin/activate

sudo -u postgres psql thedatam_db < thedatam_db.sql

pip install -r requirements.txt

playwright install

playwright install-deps

pip install gunicorn

sudo nano /etc/systemd/system/gunicorn.service

####################################

[Unit]
Description=Gunicorn instance to serve your Django app
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/api.thedatamine.io
ExecStart=/var/www/api.thedatamine.io/myenv/bin/gunicorn --workers 3 --bind unix:/run/gunicorn.sock thedatamine.wsgi:application

Restart=always
RestartSec=5
KillMode=mixed
TimeoutStopSec=5

[Install]
WantedBy=multi-user.target

####################################

sudo systemctl start gunicorn

sudo systemctl enable gunicorn

sudo systemctl restart gunicorn

sudo systemctl status gunicorn

sudo systemctl daemon-reload

sudo mkdir static

sudo mkdir thedatamine/static

sudo mkdir conf

sudo nano thedatamine/wsgi.py

Change:
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "thedatamine.settings.dev")
To:
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "thedatamine.settings.production")

python manage.py collectstatic

sudo nano conf/gunicorn_config.py

##################################

command = '/var/www/api.thedatamine.io/myenv/bin/gunicorn'
pythonpath = '/var/www/api.thedatamine.io'
bind = '178.128.39.77:8000'
workers = 3

##################################

gunicorn -c conf/gunicorn_config.py thedatamine.wsgi

Ctrl Z && bg -> for playing in the background

deactivate

sudo nano /etc/nginx/sites-available/thedatamine

##################################

server {
    listen 80;
    server_name thedatamine.online;

    location /static/ {
        alias /var/www/api.thedatamine.io/static/;
    }

    location / {
        proxy_pass http://178.128.39.77:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

###################################

cd /etc/nginx/sites-enabled/

sudo ln -s /etc/nginx/sites-available/thedatamine

sudo rm default

sudo apt install certbot python3-certbot-nginx -y

sudo certbot --nginx -d thedatamine.online

sudo nginx -t

sudo systemctl restart nginx

pscp -P 22 forebet_data.json root@178.128.39.77:/var/www/api.thedatamine.io/media/documents/

pscp.exe -P 22 root@156.155.253.131:/var/www/api.thedatamine.io/media/documents/forebet_data.json C:\Users\Ring'az\Desktop

mv /root/forebet_data.json /var/www/api.thedatamine.io/media/documents/

sudo apt install cron

python manage.py crontab add

python manage.py crontab show

python manage.py crontab remove

sudo crontab -e

sudo service cron restart

sudo systemctl restart nginx

sudo systemctl restart gunicorn

sudo systemctl daemon-reload










